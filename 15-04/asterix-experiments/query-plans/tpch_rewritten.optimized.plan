distribute result [%0->$$53]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange 
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$53])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$53] <- [function-call: asterix:closed-record-constructor, Args:[AString: {nation_key}, %0->$$61, AString: {nation_name}, %0->$$75, AString: {aggregates}, %0->$$47]]
      -- ASSIGN  |PARTITIONED|
        project ([$$47, $$61, $$75])
        -- STREAM_PROJECT  |PARTITIONED|
          exchange 
          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
            left outer join (function-call: algebricks:eq, Args:[%0->$$61, %0->$$10])
            -- HYBRID_HASH_JOIN [$$61][$$10]  |PARTITIONED|
              exchange 
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                project ([$$61, $$75])
                -- STREAM_PROJECT  |PARTITIONED|
                  assign [$$75] <- [function-call: asterix:field-access-by-index, Args:[%0->$$0, AInt32: {1}]]
                  -- ASSIGN  |PARTITIONED|
                    exchange 
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      data-scan []<-[$$61, $$0] <- GlobalMarketplace:Nations
                      -- DATASOURCE_SCAN  |PARTITIONED|
                        exchange 
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          empty-tuple-source
                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
              exchange 
              -- HASH_PARTITION_EXCHANGE [$$10]  |PARTITIONED|
                group by ([$$10 := %0->$$6]) decor ([]) {
                          aggregate [$$47] <- [function-call: asterix:listify, Args:[function-call: asterix:closed-record-constructor, Args:[AString: {order_year}, %0->$$72, AString: {list_price}, %0->$$74]]]
                          -- AGGREGATE  |LOCAL|
                            limit AInt32: {3}
                            -- STREAM_LIMIT  |LOCAL|
                              order (DESC, %0->$$72) 
                              -- IN_MEMORY_STABLE_SORT [$$72(DESC)]  |LOCAL|
                                nested tuple source
                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                       }
                -- PRE_CLUSTERED_GROUP_BY[$$6]  |PARTITIONED|
                  exchange 
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    order (ASC, %0->$$6) 
                    -- STABLE_SORT [$$6(ASC)]  |PARTITIONED|
                      exchange 
                      -- HASH_PARTITION_EXCHANGE [$$6]  |PARTITIONED|
                        project ([$$6, $$72, $$74])
                        -- STREAM_PROJECT  |PARTITIONED|
                          assign [$$74, $$72] <- [function-call: asterix:field-access-by-index, Args:[%0->$$30, AInt32: {2}], function-call: asterix:field-access-by-index, Args:[%0->$$30, AInt32: {1}]]
                          -- ASSIGN  |PARTITIONED|
                            project ([$$6, $$30])
                            -- STREAM_PROJECT  |PARTITIONED|
                              assign [$$30] <- [function-call: asterix:closed-record-constructor, Args:[AString: {nation_key}, %0->$$6, AString: {order_year}, %0->$$5, AString: {list_price}, %0->$$71]]
                              -- ASSIGN  |PARTITIONED|
                                exchange 
                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                  group by ([$$5 := %0->$$80; $$6 := %0->$$81]) decor ([]) {
                                            aggregate [$$71] <- [function-call: asterix:agg-sql-sum, Args:[%0->$$79]]
                                            -- AGGREGATE  |LOCAL|
                                              nested tuple source
                                              -- NESTED_TUPLE_SOURCE  |LOCAL|
                                         }
                                  -- PRE_CLUSTERED_GROUP_BY[$$80, $$81]  |PARTITIONED|
                                    exchange 
                                    -- HASH_PARTITION_MERGE_EXCHANGE MERGE:[$$80(ASC), $$81(ASC)] HASH:[$$80, $$81]  |PARTITIONED|
                                      group by ([$$80 := %0->$$57; $$81 := %0->$$62]) decor ([]) {
                                                aggregate [$$79] <- [function-call: asterix:agg-local-sql-sum, Args:[%0->$$33]]
                                                -- AGGREGATE  |LOCAL|
                                                  nested tuple source
                                                  -- NESTED_TUPLE_SOURCE  |LOCAL|
                                             }
                                      -- SORT_GROUP_BY[$$57, $$62]  |PARTITIONED|
                                        exchange 
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          project ([$$33, $$57, $$62])
                                          -- STREAM_PROJECT  |PARTITIONED|
                                            exchange 
                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                              join (function-call: algebricks:and, Args:[function-call: algebricks:eq, Args:[%0->$$62, %0->$$67], function-call: algebricks:eq, Args:[%0->$$64, %0->$$69]])
                                              -- HYBRID_HASH_JOIN [$$62, $$69][$$67, $$64]  |PARTITIONED|
                                                exchange 
                                                -- HASH_PARTITION_EXCHANGE [$$62, $$69]  |PARTITIONED|
                                                  join (TRUE)
                                                  -- NESTED_LOOP  |PARTITIONED|
                                                    exchange 
                                                    -- BROADCAST_EXCHANGE  |PARTITIONED|
                                                      project ([$$62])
                                                      -- STREAM_PROJECT  |PARTITIONED|
                                                        exchange 
                                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                          data-scan []<-[$$62, $$2] <- GlobalMarketplace:Nations
                                                          -- DATASOURCE_SCAN  |PARTITIONED|
                                                            exchange 
                                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                              empty-tuple-source
                                                              -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                                                    exchange 
                                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                      project ([$$69, $$33, $$57])
                                                      -- STREAM_PROJECT  |PARTITIONED|
                                                        assign [$$33, $$57, $$69] <- [function-call: asterix:field-access-by-index, Args:[%0->$$3, AInt32: {3}], function-call: asterix:field-access-by-index, Args:[%0->$$3, AInt32: {2}], function-call: asterix:field-access-by-index, Args:[%0->$$3, AInt32: {1}]]
                                                        -- ASSIGN  |PARTITIONED|
                                                          project ([$$3])
                                                          -- STREAM_PROJECT  |PARTITIONED|
                                                            exchange 
                                                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                              data-scan []<-[$$63, $$3] <- GlobalMarketplace:Orders
                                                              -- DATASOURCE_SCAN  |PARTITIONED|
                                                                exchange 
                                                                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                                  empty-tuple-source
                                                                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
                                                exchange 
                                                -- HASH_PARTITION_EXCHANGE [$$67, $$64]  |PARTITIONED|
                                                  project ([$$64, $$67])
                                                  -- STREAM_PROJECT  |PARTITIONED|
                                                    assign [$$67] <- [function-call: asterix:field-access-by-index, Args:[%0->$$4, AInt32: {1}]]
                                                    -- ASSIGN  |PARTITIONED|
                                                      exchange 
                                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                        data-scan []<-[$$64, $$4] <- GlobalMarketplace:Customers
                                                        -- DATASOURCE_SCAN  |PARTITIONED|
                                                          exchange 
                                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                            empty-tuple-source
                                                            -- EMPTY_TUPLE_SOURCE  |PARTITIONED|