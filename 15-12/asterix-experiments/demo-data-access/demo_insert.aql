drop dataverse tpch if exists;
create dataverse tpch;
use dataverse tpch;

create type NationType as closed {
    n_nationkey : int32,
    n_name : string,
    n_regionkey: int32,
    n_comment: string
}

create type CustomerType as closed {
    c_custkey : int32,
    c_name : string,
    c_address : string,
    c_nationkey: int32,
    c_phone: string,
    c_acctbal: double,
    c_mktsegment: string,
    c_comment: string
}

create type OrderType as closed {
    o_orderkey : int32,
    o_custkey : int32,
    o_orderstatus : string,
    o_totalprice : double,
    o_orderdate: string,
    o_orderpriority : string,
    o_clerk: string,
    o_shippriority: int32,
    o_comment: string
}

create dataset Nations(NationType) primary key n_nationkey;
create dataset Customers(CustomerType) primary key c_custkey;
create dataset Orders(OrderType) primary key o_orderkey;

create index CNationRefIdx on Customers(c_nationkey);
create index OCustRefIdx on Orders(o_custkey);

// Since paths must be absolute, might have to do some edits here.
load dataset Nations using localfs
(("path"="127.0.0.1:///Users/julestestard/Projects/ResearchThoughts/15-12/asterix-experiments/demo-data-access/nations.adm"),("format"="adm"));

load dataset Customers using localfs
(("path"="127.0.0.1:///Users/julestestard/Projects/ResearchThoughts/15-12/asterix-experiments/demo-data-access/customers.adm"),("format"="adm"));

load dataset Orders using localfs
(("path"="127.0.0.1:///Users/julestestard/Projects/ResearchThoughts/15-12/asterix-experiments/demo-data-access/orders.adm"),("format"="adm"));
